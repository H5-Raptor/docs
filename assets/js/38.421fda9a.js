(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{656:function(v,_,e){"use strict";e.r(_);var t=e(83),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"组件与素材库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件与素材库"}},[v._v("#")]),v._v(" 组件与素材库")]),v._v(" "),e("p",[v._v("Raptor 以"),e("code",[v._v("组件")]),v._v("为基础单元，每个组件都是独立的个体，准确来说，组件的每个版本都是独立的个体。\n这与常见的组件化中台提出的"),e("code",[v._v("组件库")]),v._v("或"),e("code",[v._v("素材库")]),v._v("（后续统一称"),e("code",[v._v("素材库")]),v._v("）不同，这类中台只能做到"),e("code",[v._v("素材库")]),v._v("为基础单元，无法细分"),e("code",[v._v("组件")]),v._v("（其组件只能相对于本素材库而言）。")]),v._v(" "),e("p",[v._v("组件与素材库 2 种不同的设计思想各有特点，其中以下面几点最为特别。")]),v._v(" "),e("h2",{attrs:{id:"跨组复用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨组复用"}},[v._v("#")]),v._v(" 跨组复用")]),v._v(" "),e("p",[e("img",{attrs:{src:"/docs/image/component-tech.png",alt:"component-tech"}})]),v._v(" "),e("p",[v._v("上图左侧，红、蓝 2 个业务组有使用到相同功能的"),e("code",[v._v("组件 A")]),v._v("，但由于素材库的隔离，他们只能各自维护着该功能的组件。")]),v._v(" "),e("p",[v._v("上图右侧，所有组件都沉淀在"),e("code",[v._v("组件市场")]),v._v("，红、蓝 2 组按业务需要注册相应组件，复用"),e("code",[v._v("组件 C")]),v._v("，大大提高组件复用率，减少开发工作量。")]),v._v(" "),e("h2",{attrs:{id:"版本管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本管理"}},[v._v("#")]),v._v(" 版本管理")]),v._v(" "),e("p",[e("img",{attrs:{src:"/docs/image/component-version.png",alt:"component-version"}})]),v._v(" "),e("p",[v._v("上图左侧，由于"),e("code",[v._v("素材库")]),v._v("是整体迭代升级的，过程中"),e("code",[v._v("组件 A")]),v._v("可能被修改，而此前使用"),e("code",[v._v("组件 A")]),v._v("的页面由于其"),e("code",[v._v("组件 A")]),v._v("的配置数据（主要是结构）比较旧，\n在新的"),e("code",[v._v("组件 A")]),v._v("逻辑下可能触发异常，从而影响页面稳定。如果升级之后发现问题，"),e("code",[v._v("素材库")]),v._v("回滚之前的版本，但由于已有页面使用到新增的"),e("code",[v._v("组件 C")]),v._v("，\n回滚操作将导致使用"),e("code",[v._v("组件 C")]),v._v("的页面异常，这更是灾难性的，因为这个缘由，"),e("code",[v._v("素材库")]),v._v("方案的设计可以说是没有版本管理，因为管起来的风险太高，\n干脆不管了。")]),v._v(" "),e("p",[v._v("上图右侧，由于组件按版本迭代，组件的每个版本都是独立的个体，组件在加入页面一刻起，页面就固定了使用组件的某个版本，不会随组件的版本迭代而变动。\n且组件某版本一旦发布，该版本不能被覆盖或删除。页面将永远是用户配置完所体验到的那样。")]),v._v(" "),e("h2",{attrs:{id:"预览页性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预览页性能"}},[v._v("#")]),v._v(" 预览页性能")]),v._v(" "),e("p",[v._v("当我们在编辑页面时，"),e("code",[v._v("编辑过程实时预览")]),v._v("是可视化的基本体验要求，除了编辑页中需要实时预览之外，也需要独立的预览页供用户访问。")]),v._v(" "),e("p",[v._v("也正是由于"),e("code",[v._v("实时预览")]),v._v("的要求，"),e("code",[v._v("素材库")]),v._v("方案的中台往往在预览页加载完整的"),e("code",[v._v("素材库")]),v._v("，但一个页面使用的组件才 10 几个，业务的"),e("code",[v._v("素材库")]),v._v("\n包含 200 个组件都是极为正常的，这导致预览页的性能随着业务体量增大（组件增多）而越发糟糕。\n"),e("code",[v._v("素材库")]),v._v("方案想在预览页做按需加载是可以做到的，需要实时根据页面挑选的组件剔除掉未使用的组件，但基于现有工具链做到的实时效果不理想。")]),v._v(" "),e("p",[v._v("而"),e("code",[v._v("以组件为基础单位")]),v._v("的方案，由于组件的每个版本都是独立的个体，可以较轻松的实现在为页面添加组件的时机在现场异步加载组件，\n这个异步过程产生的时间空隙基本等同于一个组件包加载的时间（100ms以内），人是无法感知到这个差异的。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[v._v("预览页性能问题的存在，使得"),e("code",[v._v("素材库")]),v._v("方案的中台存在上限，而以"),e("code",[v._v("组件")]),v._v("为基础单元的方案可认为不存在上限，小到为公司服务，大到供全球服务。")])]),v._v(" "),e("h2",{attrs:{id:"复杂度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复杂度"}},[v._v("#")]),v._v(" 复杂度")]),v._v(" "),e("p",[e("code",[v._v("素材库")]),v._v("方案相比于"),e("code",[v._v("组件")]),v._v("方案优点在于简单，主要体现在：")]),v._v(" "),e("ol",[e("li",[v._v("中台开发简单。预览页直接加载业务组完整素材库，不用处理按需加载问题，更不用处理组件的依赖包问题。\n发布（编译）时因为"),e("code",[v._v("素材库")]),v._v("的依赖都写在"),e("code",[v._v("package.json")]),v._v("中，能很好的借助当前打包生态。")]),v._v(" "),e("li",[v._v("业务接入简单。以"),e("code",[v._v("组件")]),v._v("为单元的方式，业务组需要为预览页配置"),e("code",[v._v("AMD")]),v._v("模块路径以支持按需加载，\n而"),e("code",[v._v("素材库")]),v._v("方式不存在该要求。")])])])}),[],!1,null,null,null);_.default=o.exports}}]);